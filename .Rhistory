max(files$index)
i=1
# unzip paired birth and household data
tmp.file.birth = unzip.dtafile(file.path(dirs,subset(files, index == i & recode == "birth")$filename))
files = data.frame(filename = c("ETBR71DT.zip","ETBR81DT.zip","ETHR71DT.zip","ETHR81DT.zip"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
folder = c("ET_2016_DHS_11102021_1856_142794","ET_2019_InterimDHS_11102021_1855_142794","ET_2016_DHS_11102021_1856_142794","ET_2019_InterimDHS_11102021_1855_142794"),
index = c(1,2,1,2))
files
# unzip paired birth and household data
tmp.file.birth = unzip.dtafile(file.path(dirs,folder,subset(files, index == i & recode == "birth")$filename))
# unzip paired birth and household data
tmp.file.birth = unzip.dtafile(file.path(dirs,subset(files, index == i & recode == "birth")$folder,subset(files, index == i & recode == "birth")$filename))
dirs = "../Data/ETH DHS"
files = data.frame(filename = c("ETBR71DT.zip","ETBR81DT.zip","ETHR71DT.zip","ETHR81DT.zip"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
#                   folder = c("ET_2016_DHS_11102021_1856_142794","ET_2019_InterimDHS_11102021_1855_142794","ET_2016_DHS_11102021_1856_142794","ET_2019_InterimDHS_11102021_1855_142794"),
index = c(1,2,1,2))
# helper to just pull the dta file
#unzip.dtafile = function(zipfile){
#  available_files = unzip(zipfile, list = T)
#  unzip(zipfile, files = availab
files = data.frame(filename = c("ETBR71DT.zip","ETBR81DT.zip","ETHR71DT.zip","ETHR81DT.zip"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
#                   folder = c("ET_2016_DHS_11102021_1856_142794","ET_2019_InterimDHS_11102021_1855_142794","ET_2016_DHS_11102021_1856_142794","ET_2019_InterimDHS_11102021_1855_142794"),
index = c(1,2,1,2))
# helper to just pull the dta file
#unzip.dtafile = function(zipfile){
#  available_files = unzip(zipfile, list = T)
#  unzip(zipfile, files = availab
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename)
tmp.file.hh = file.path(dirs,folder,subset(files, index == i & recode == "household")$filename)
tmp.file.hh = file.path(dirs,subset(files, index == i & recode == "household")$filename)
# read from temporary location
tmp.svy.birth = read.dta13(tmp.file.birth)
tmp.file.birth
files = data.frame(filename = c("ETBR71DT","ETBR81DT","ETHR71DT","ETHR81DT"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
#                   folder = c("ET_2016_DHS_11102021_1856_142794","ET_2019_InterimDHS_11102021_1855_142794","ET_2016_DHS_11102021_1856_142794","ET_2019_InterimDHS_11102021_1855_142794"),
index = c(1,2,1,2))
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename)
tmp.file.hh = file.path(dirs,subset(files, index == i & recode == "household")$filename)
tmp.file.birth
# read from temporary location
tmp.svy.birth = read.dta13(tmp.file.birth)
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename,subset(files, index == i & recode == "birth")$filename,".DTA")
tmp.file.birth
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename)
tmp.file.hh = file.path(dirs,subset(files, index == i & recode == "household")$filename)
# read from temporary location
tmp.svy.birth = read.dta13(tmp.file.birth)
tmp.file.birth
files = data.frame(filename = c("ETBR71DT.DTA","ETBR81DT.DTA","ETHR71DT.DTA","ETHR81DT.DTA"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
index = c(1,2,1,2))
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename)
tmp.file.hh = file.path(dirs,subset(files, index == i & recode == "household")$filename)
# read from temporary location
tmp.svy.birth = read.dta13(tmp.file.birth)
file.remove(tmp.file.birth)
tmp.file.birth
files = data.frame(filename = c("ETBR71.DTA","ETBR81.DTA","ETHR71.DTA","ETHR81.DTA"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
index = c(1,2,1,2))
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename)
tmp.file.hh = file.path(dirs,subset(files, index == i & recode == "household")$filename)
# read from temporary location
tmp.svy.birth = read.dta13(tmp.file.birth)
tmp.file.birth
files = data.frame(filename = c("ETBR71FL.DTA","ETBR81FL.DTA","ETHR71FL.DTA","ETHR81FL.DTA"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
index = c(1,2,1,2))
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename)
tmp.file.hh = file.path(dirs,subset(files, index == i & recode == "household")$filename)
# read from temporary location
tmp.svy.birth = read.dta13(tmp.file.birth)
file.remove(tmp.file.birth)
tmp.svy.hh = read.dta13(tmp.file.hh)
file.remove(tmp.file.hh)
# calculate the birth month relative to the month of the first interview;
# larger number imply further in the past
tmp.svy.birth$relative_birth_month = min(tmp.svy.birth$v008) - tmp.svy.birth$b3
temp_birth_month = table(tmp.svy.birth$relative_birth_month)
tmp.svy.birth$b1_recode = as.factor(ifelse(tmp.svy.birth$relative_birth_month %in% 1:36,tmp.svy.birth$b1,NA))
tmp.svy.birth$b1_recode_no_imputation = as.factor(ifelse(tmp.svy.birth$relative_birth_month %in% 1:36,
ifelse(as.integer(tmp.svy.birth$b10) == 1,tmp.svy.birth$b1,NA),NA))
# summarize births by household and month
# create dummy coding of births
for(k in 1:12){
tmp.svy.birth[,paste("month",k,sep="")] = ifelse(tmp.svy.birth$relative_birth_month %in% 1:36 &
tmp.svy.birth$b1 == k, 1, 0)
}
tmp.svy.birth.summary = aggregate(cbind(month1,month2,month3,month4,month5,month6,month7,month8,month9,month10,month11,month12)~
v001+v002, data = tmp.svy.birth, sum)
names(tmp.svy.birth.summary)[1:2] = c("hv001","hv002")
# merge with the hh file
tmp.svy.hh = merge(tmp.svy.hh, tmp.svy.birth.summary, by = c("hv001","hv002"), all.x = T)
# replace NA with 0
for(k in 1:12){
tmp.svy.hh[,paste("month",k,sep="")] = ifelse(
is.na(tmp.svy.hh[,paste("month",k,sep="")]),0,
tmp.svy.hh[,paste("month",k,sep="")]
)
}
tmp.svy.design.birth = svydesign(id = ~v001, strata=~v024+v025, weights = tmp.svy.birth$v005/mean(tmp.svy.birth$v005), data=tmp.svy.birth)
birth_month = svyby(~b1_recode, by = ~v024, FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
birth_month_no_imputation = svyby(~b1_recode_no_imputation, by = ~v024, FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
names(birth_month) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month[,1] = tolower(as.character(birth_month[,1]))
names(birth_month_no_imputation) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month_no_imputation[,1] = tolower(as.character(birth_month_no_imputation[,1]))
birth_month_combined = svyby(~b1_recode, by = ~I("Country"), FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
birth_month_no_imputation_combined = svyby(~b1_recode_no_imputation, by = ~I("Country"), FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
names(birth_month_combined) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
names(birth_month_no_imputation_combined) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month = rbind(birth_month, birth_month_combined)
birth_month_no_imputation = rbind(birth_month_no_imputation, birth_month_no_imputation_combined)
# part 2: birth rate
tmp.svy.hh$total_births = with(tmp.svy.hh,
month1+month2+month3+month4+month5+month6+
month7+month8+month9+month10+month11+month12)
tmp.svy.design.hh = svydesign(id = ~hv001, strata=~hv024+hv025, weights = tmp.svy.hh$hv005/mean(tmp.svy.hh$hv005), data=tmp.svy.hh)
birth_rate_year = svyby(~I(total_births/3),
by=~hv024, denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_year) = c("region","yearly_birthrate_per_1000", "yearly_birthrate_per_1000_se")
birth_rate_year$region = tolower(as.character(birth_rate_year$region))
birth_rate_year_combined = svyby(~I(total_births/3),
by=~I("Country"), denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_year_combined) = c("region","yearly_birthrate_per_1000", "yearly_birthrate_per_1000_se")
birth_rate_year = rbind(birth_rate_year, birth_rate_year_combined)
birth_rate_month = svyby(~I(month1/3)+I(month2/3)+I(month3/3)+I(month4/3)+
I(month5/3)+I(month6/3)+I(month7/3)+I(month8/3)+
I(month9/3)+I(month10/3)+I(month11/3)+I(month12/3),
by=~hv024, denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_month) = c("region",paste("month",1:12,"_birthrate",sep=""),
paste("month",1:12,"_birthrate_se",sep=""))
birth_rate_month$region = tolower(birth_rate_month$region)
birth_rate_month_combined = svyby(~I(month1/3)+I(month2/3)+I(month3/3)+I(month4/3)+
I(month5/3)+I(month6/3)+I(month7/3)+I(month8/3)+
I(month9/3)+I(month10/3)+I(month11/3)+I(month12/3),
by=~I("Country"), denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_month_combined) = names(birth_rate_month)
birth_rate_month = rbind(birth_rate_month, birth_rate_month_combined)
birth_rate_month_no_imputation = merge(birth_rate_year[,1:2],
birth_month_no_imputation[1:13],by="region")
for(k in 1:12){
birth_rate_month_no_imputation[,paste("month",k,"_birthrate",sep="")] =
birth_rate_month_no_imputation[,paste("month",k,sep="")] *
birth_rate_month_no_imputation$yearly_birthrate_per_1000
}
# just the relevant columns; SE's not computed
birth_rate_month_no_imputation = birth_rate_month_no_imputation[,names(birth_rate_month)[1:13]]
results[[i]] = list(birth_month = birth_month,
birth_month_no_imputation = birth_month_no_imputation,
birth_rate_year = birth_rate_year,
birth_rate_month = birth_rate_month,
birth_rate_month_no_imputation = birth_rate_month_no_imputation)
cat(i,"\n")
# R version 3.4.3 (2017-11-30)
# Platform: x86_64-w64-mingw32/x64 (64-bit)
# Running under: Windows >= 8 x64 (build 9200)
# Package: survey
# Version: 3.33
#
# Package: readstata13
# Version: 0.9.0
library(foreign)
library(readstata13)
library(survey)
# DHS directories
country = "Ethiopia"
dirs = "../Data/ETH DHS"
# The file extraction process is to use the zipped (compressed) household and
# birth recode files provided by DHS, using the .dta file format
files = data.frame(filename = c("ETBR71FL.DTA","ETBR81FL.DTA","ETHR71FL.DTA","ETHR81FL.DTA"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
index = c(1,2,1,2))
# helper to just pull the dta file
#unzip.dtafile = function(zipfile){
#  available_files = unzip(zipfile, list = T)
#  unzip(zipfile, files = available_files$Name[grep("DTA",available_files$Name, ignore.case=T)])
#}
# revised analysis
# step 1 - months before first interview date
results = vector("list", max(files$index))
for(i in 1:max(files$index)){
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename)
tmp.file.hh = file.path(dirs,subset(files, index == i & recode == "household")$filename)
# read from temporary location
tmp.svy.birth = read.dta13(tmp.file.birth)
file.remove(tmp.file.birth)
tmp.svy.hh = read.dta13(tmp.file.hh)
file.remove(tmp.file.hh)
# calculate the birth month relative to the month of the first interview;
# larger number imply further in the past
tmp.svy.birth$relative_birth_month = min(tmp.svy.birth$v008) - tmp.svy.birth$b3
temp_birth_month = table(tmp.svy.birth$relative_birth_month)
# recode month of birth to missing if not within 3*12 = 36 months from month of first interview
# b1 is month of birth, 1-12
# b10 is completeness of information, where b10 == 1 implies no imputation
tmp.svy.birth$b1_recode = as.factor(ifelse(tmp.svy.birth$relative_birth_month %in% 1:36,tmp.svy.birth$b1,NA))
tmp.svy.birth$b1_recode_no_imputation = as.factor(ifelse(tmp.svy.birth$relative_birth_month %in% 1:36,
ifelse(as.integer(tmp.svy.birth$b10) == 1,tmp.svy.birth$b1,NA),NA))
## approach
#  1. proportion by month for last three years by stratum (differences are testable)
#  2. yearly birth rate by month (testable)
#  3. yearly * proportion (probably testable, but no point)
# summarize births by household and month
# create dummy coding of births
for(k in 1:12){
tmp.svy.birth[,paste("month",k,sep="")] = ifelse(tmp.svy.birth$relative_birth_month %in% 1:36 &
tmp.svy.birth$b1 == k, 1, 0)
}
tmp.svy.birth.summary = aggregate(cbind(month1,month2,month3,month4,month5,month6,month7,month8,month9,month10,month11,month12)~
v001+v002, data = tmp.svy.birth, sum)
names(tmp.svy.birth.summary)[1:2] = c("hv001","hv002")
# merge with the hh file
tmp.svy.hh = merge(tmp.svy.hh, tmp.svy.birth.summary, by = c("hv001","hv002"), all.x = T)
# replace NA with 0
for(k in 1:12){
tmp.svy.hh[,paste("month",k,sep="")] = ifelse(
is.na(tmp.svy.hh[,paste("month",k,sep="")]),0,
tmp.svy.hh[,paste("month",k,sep="")]
)
}
# part 1: proportion per month with standard errors
tmp.svy.design.birth = svydesign(id = ~v001, strata=~v024+v025, weights = tmp.svy.birth$v005/mean(tmp.svy.birth$v005), data=tmp.svy.birth)
birth_month = svyby(~b1_recode, by = ~v024, FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
birth_month_no_imputation = svyby(~b1_recode_no_imputation, by = ~v024, FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
names(birth_month) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month[,1] = tolower(as.character(birth_month[,1]))
names(birth_month_no_imputation) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month_no_imputation[,1] = tolower(as.character(birth_month_no_imputation[,1]))
birth_month_combined = svyby(~b1_recode, by = ~I("Country"), FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
birth_month_no_imputation_combined = svyby(~b1_recode_no_imputation, by = ~I("Country"), FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
names(birth_month_combined) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
names(birth_month_no_imputation_combined) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month = rbind(birth_month, birth_month_combined)
birth_month_no_imputation = rbind(birth_month_no_imputation, birth_month_no_imputation_combined)
# part 2: birth rate
tmp.svy.hh$total_births = with(tmp.svy.hh,
month1+month2+month3+month4+month5+month6+
month7+month8+month9+month10+month11+month12)
tmp.svy.design.hh = svydesign(id = ~hv001, strata=~hv024+hv025, weights = tmp.svy.hh$hv005/mean(tmp.svy.hh$hv005), data=tmp.svy.hh)
birth_rate_year = svyby(~I(total_births/3),
by=~hv024, denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_year) = c("region","yearly_birthrate_per_1000", "yearly_birthrate_per_1000_se")
birth_rate_year$region = tolower(as.character(birth_rate_year$region))
birth_rate_year_combined = svyby(~I(total_births/3),
by=~I("Country"), denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_year_combined) = c("region","yearly_birthrate_per_1000", "yearly_birthrate_per_1000_se")
birth_rate_year = rbind(birth_rate_year, birth_rate_year_combined)
# part3: birth rate by month
birth_rate_month = svyby(~I(month1/3)+I(month2/3)+I(month3/3)+I(month4/3)+
I(month5/3)+I(month6/3)+I(month7/3)+I(month8/3)+
I(month9/3)+I(month10/3)+I(month11/3)+I(month12/3),
by=~hv024, denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_month) = c("region",paste("month",1:12,"_birthrate",sep=""),
paste("month",1:12,"_birthrate_se",sep=""))
birth_rate_month$region = tolower(birth_rate_month$region)
birth_rate_month_combined = svyby(~I(month1/3)+I(month2/3)+I(month3/3)+I(month4/3)+
I(month5/3)+I(month6/3)+I(month7/3)+I(month8/3)+
I(month9/3)+I(month10/3)+I(month11/3)+I(month12/3),
by=~I("Country"), denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_month_combined) = names(birth_rate_month)
birth_rate_month = rbind(birth_rate_month, birth_rate_month_combined)
# simple adjustment using no imputation: multiple birth rate and age distribution
birth_rate_month_no_imputation = merge(birth_rate_year[,1:2],
birth_month_no_imputation[1:13],by="region")
for(k in 1:12){
birth_rate_month_no_imputation[,paste("month",k,"_birthrate",sep="")] =
birth_rate_month_no_imputation[,paste("month",k,sep="")] *
birth_rate_month_no_imputation$yearly_birthrate_per_1000
}
# just the relevant columns; SE's not computed
birth_rate_month_no_imputation = birth_rate_month_no_imputation[,names(birth_rate_month)[1:13]]
# wrap it up
results[[i]] = list(birth_month = birth_month,
birth_month_no_imputation = birth_month_no_imputation,
birth_rate_year = birth_rate_year,
birth_rate_month = birth_rate_month,
birth_rate_month_no_imputation = birth_rate_month_no_imputation)
cat(i,"\n")
}
year_label = unique(files[,c("index","year_label")])
year_label = year_label$year_label[order(year_label$index)]
# write to csv
birth_month_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_month)))
birth_month_no_imputation_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_month_no_imputation)))
birth_rate_year_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_rate_year)))
birth_rate_month_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_rate_month)))
birth_rate_month_no_imputation_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_rate_month_no_imputation)))
today = format(Sys.Date(),"%Y%m%d")
write.csv(birth_month_all, file=paste(country,"_birth_month_",today,".csv",sep=""),
row.names = F)
write.csv(birth_month_no_imputation_all, file=paste(country,"_birth_month_no_imputation_",today,".csv",sep=""),
row.names = F)
write.csv(birth_rate_year_all, file=paste(country,"_birth_rate_year_",today,".csv",sep=""),
row.names = F)
write.csv(birth_rate_month_all, file=paste(country,"_birth_rate_month_",today,".csv",sep=""),
row.names = F)
write.csv(birth_rate_month_no_imputation_all, file=paste(country,"_birth_rate_month_no_imputation_",today,".csv",sep=""),
row.names = F)
i
# R version 3.4.3 (2017-11-30)
# Platform: x86_64-w64-mingw32/x64 (64-bit)
# Running under: Windows >= 8 x64 (build 9200)
# Package: survey
# Version: 3.33
#
# Package: readstata13
# Version: 0.9.0
library(foreign)
library(readstata13)
library(survey)
# DHS directories
country = "Ethiopia"
dirs = "../Data/ETH DHS"
# The file extraction process is to use the zipped (compressed) household and
# birth recode files provided by DHS, using the .dta file format
files = data.frame(filename = c("ETBR71FL.DTA","ETBR81FL.DTA","ETHR71FL.DTA","ETHR81FL.DTA"),
recode = c(  "birth",       "birth",       "household",   "household"),
year_label = c(2016,        2019,          2016,          2019),
index = c(1,2,1,2))
# helper to just pull the dta file
#unzip.dtafile = function(zipfile){
#  available_files = unzip(zipfile, list = T)
#  unzip(zipfile, files = available_files$Name[grep("DTA",available_files$Name, ignore.case=T)])
#}
# revised analysis
# step 1 - months before first interview date
results = vector("list", max(files$index))
for(i in 1:max(files$index)){
# pick up birth and household data
tmp.file.birth = file.path(dirs,subset(files, index == i & recode == "birth")$filename)
tmp.file.hh = file.path(dirs,subset(files, index == i & recode == "household")$filename)
# read from temporary location
tmp.svy.birth = read.dta13(tmp.file.birth)
file.remove(tmp.file.birth)
tmp.svy.hh = read.dta13(tmp.file.hh)
file.remove(tmp.file.hh)
# calculate the birth month relative to the month of the first interview;
# larger number imply further in the past
tmp.svy.birth$relative_birth_month = min(tmp.svy.birth$v008) - tmp.svy.birth$b3
temp_birth_month = table(tmp.svy.birth$relative_birth_month)
# recode month of birth to missing if not within 3*12 = 36 months from month of first interview
# b1 is month of birth, 1-12
# b10 is completeness of information, where b10 == 1 implies no imputation
tmp.svy.birth$b1_recode = as.factor(ifelse(tmp.svy.birth$relative_birth_month %in% 1:36,tmp.svy.birth$b1,NA))
tmp.svy.birth$b1_recode_no_imputation = as.factor(ifelse(tmp.svy.birth$relative_birth_month %in% 1:36,
ifelse(as.integer(tmp.svy.birth$b10) == 1,tmp.svy.birth$b1,NA),NA))
## approach
#  1. proportion by month for last three years by stratum (differences are testable)
#  2. yearly birth rate by month (testable)
#  3. yearly * proportion (probably testable, but no point)
# summarize births by household and month
# create dummy coding of births
for(k in 1:12){
tmp.svy.birth[,paste("month",k,sep="")] = ifelse(tmp.svy.birth$relative_birth_month %in% 1:36 &
tmp.svy.birth$b1 == k, 1, 0)
}
tmp.svy.birth.summary = aggregate(cbind(month1,month2,month3,month4,month5,month6,month7,month8,month9,month10,month11,month12)~
v001+v002, data = tmp.svy.birth, sum)
names(tmp.svy.birth.summary)[1:2] = c("hv001","hv002")
# merge with the hh file
tmp.svy.hh = merge(tmp.svy.hh, tmp.svy.birth.summary, by = c("hv001","hv002"), all.x = T)
# replace NA with 0
for(k in 1:12){
tmp.svy.hh[,paste("month",k,sep="")] = ifelse(
is.na(tmp.svy.hh[,paste("month",k,sep="")]),0,
tmp.svy.hh[,paste("month",k,sep="")]
)
}
# part 1: proportion per month with standard errors
tmp.svy.design.birth = svydesign(id = ~v001, strata=~v024+v025, weights = tmp.svy.birth$v005/mean(tmp.svy.birth$v005), data=tmp.svy.birth)
birth_month = svyby(~b1_recode, by = ~v024, FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
birth_month_no_imputation = svyby(~b1_recode_no_imputation, by = ~v024, FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
names(birth_month) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month[,1] = tolower(as.character(birth_month[,1]))
names(birth_month_no_imputation) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month_no_imputation[,1] = tolower(as.character(birth_month_no_imputation[,1]))
birth_month_combined = svyby(~b1_recode, by = ~I("Country"), FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
birth_month_no_imputation_combined = svyby(~b1_recode_no_imputation, by = ~I("Country"), FUN = svymean, design=tmp.svy.design.birth, na.rm = T)
names(birth_month_combined) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
names(birth_month_no_imputation_combined) = c("region",paste("month",1:12,sep=""),
paste("month",1:12,"_se",sep=""))
birth_month = rbind(birth_month, birth_month_combined)
birth_month_no_imputation = rbind(birth_month_no_imputation, birth_month_no_imputation_combined)
# part 2: birth rate
tmp.svy.hh$total_births = with(tmp.svy.hh,
month1+month2+month3+month4+month5+month6+
month7+month8+month9+month10+month11+month12)
tmp.svy.design.hh = svydesign(id = ~hv001, strata=~hv024+hv025, weights = tmp.svy.hh$hv005/mean(tmp.svy.hh$hv005), data=tmp.svy.hh)
birth_rate_year = svyby(~I(total_births/3),
by=~hv024, denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_year) = c("region","yearly_birthrate_per_1000", "yearly_birthrate_per_1000_se")
birth_rate_year$region = tolower(as.character(birth_rate_year$region))
birth_rate_year_combined = svyby(~I(total_births/3),
by=~I("Country"), denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_year_combined) = c("region","yearly_birthrate_per_1000", "yearly_birthrate_per_1000_se")
birth_rate_year = rbind(birth_rate_year, birth_rate_year_combined)
# part3: birth rate by month
birth_rate_month = svyby(~I(month1/3)+I(month2/3)+I(month3/3)+I(month4/3)+
I(month5/3)+I(month6/3)+I(month7/3)+I(month8/3)+
I(month9/3)+I(month10/3)+I(month11/3)+I(month12/3),
by=~hv024, denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_month) = c("region",paste("month",1:12,"_birthrate",sep=""),
paste("month",1:12,"_birthrate_se",sep=""))
birth_rate_month$region = tolower(birth_rate_month$region)
birth_rate_month_combined = svyby(~I(month1/3)+I(month2/3)+I(month3/3)+I(month4/3)+
I(month5/3)+I(month6/3)+I(month7/3)+I(month8/3)+
I(month9/3)+I(month10/3)+I(month11/3)+I(month12/3),
by=~I("Country"), denominator=~I(hv013/1000),
design=tmp.svy.design.hh,FUN=svyratio)
names(birth_rate_month_combined) = names(birth_rate_month)
birth_rate_month = rbind(birth_rate_month, birth_rate_month_combined)
# simple adjustment using no imputation: multiple birth rate and age distribution
birth_rate_month_no_imputation = merge(birth_rate_year[,1:2],
birth_month_no_imputation[1:13],by="region")
for(k in 1:12){
birth_rate_month_no_imputation[,paste("month",k,"_birthrate",sep="")] =
birth_rate_month_no_imputation[,paste("month",k,sep="")] *
birth_rate_month_no_imputation$yearly_birthrate_per_1000
}
# just the relevant columns; SE's not computed
birth_rate_month_no_imputation = birth_rate_month_no_imputation[,names(birth_rate_month)[1:13]]
# wrap it up
results[[i]] = list(birth_month = birth_month,
birth_month_no_imputation = birth_month_no_imputation,
birth_rate_year = birth_rate_year,
birth_rate_month = birth_rate_month,
birth_rate_month_no_imputation = birth_rate_month_no_imputation)
cat(i,"\n")
}
year_label = unique(files[,c("index","year_label")])
year_label = year_label$year_label[order(year_label$index)]
# write to csv
birth_month_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_month)))
birth_month_no_imputation_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_month_no_imputation)))
birth_rate_year_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_rate_year)))
birth_rate_month_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_rate_month)))
birth_rate_month_no_imputation_all = do.call("rbind",lapply(1:length(results),
function(m) cbind(year=year_label[m],
results[[m]]$birth_rate_month_no_imputation)))
today = format(Sys.Date(),"%Y%m%d")
write.csv(birth_month_all, file=paste(country,"_birth_month_",today,".csv",sep=""),
row.names = F)
write.csv(birth_month_no_imputation_all, file=paste(country,"_birth_month_no_imputation_",today,".csv",sep=""),
row.names = F)
write.csv(birth_rate_year_all, file=paste(country,"_birth_rate_year_",today,".csv",sep=""),
row.names = F)
write.csv(birth_rate_month_all, file=paste(country,"_birth_rate_month_",today,".csv",sep=""),
row.names = F)
write.csv(birth_rate_month_no_imputation_all, file=paste(country,"_birth_rate_month_no_imputation_",today,".csv",sep=""),
row.names = F)
tmp.file.birth
